"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-z@12so8#rbtl)aulvb&3q&4sen_ransnqc97jxrl%!aba9j6za'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# # Determine the environment: Development or Production
# DEBUG = os.getenv('DEBUG', 'False') == 'True'

# # Allowed hosts configuration
# # Include both local and production domains
# ALLOWED_HOSTS = [
#     'localhost',          # Local development
#     '127.0.0.1',          # Local development
#     '[::1]',              # IPv6 localhost
#     'www.fruitkha.com',   # Production domain (with www)
#     'fruitkha.com',       # Production domain (without www)
# ]

# # Trust these origins for CSRF protection
# CSRF_TRUSTED_ORIGINS = [
#     'https://www.fruitkha.com',  # Production with HTTPS
#     'https://fruitkha.com',      # Production with HTTPS
# ]

# # Secure settings for production only
# if not DEBUG:
#     # Redirect all HTTP traffic to HTTPS
#     SECURE_SSL_REDIRECT = True

#     # Use secure cookies for session and CSRF
#     SESSION_COOKIE_SECURE = True
#     CSRF_COOKIE_SECURE = True

#     # Enable HTTP Strict Transport Security (HSTS)
#     SECURE_HSTS_SECONDS = 31536000  # Force HTTPS for one year
#     SECURE_HSTS_INCLUDE_SUBDOMAINS = True  # Apply HSTS to subdomains
#     SECURE_HSTS_PRELOAD = True  # Allow domain to be preloaded into browsers

#     # Mitigate content-type sniffing vulnerabilities
#     SECURE_CONTENT_TYPE_NOSNIFF = True

#     # Prevent the site from being displayed in an iframe
#     X_FRAME_OPTIONS = 'DENY'

# else:
#     # In development, disable strict HTTPS enforcement
#     SECURE_SSL_REDIRECT = False
#     SESSION_COOKIE_SECURE = False
#     CSRF_COOKIE_SECURE = False

# # Additional security measures applicable in both environments
# # Prevent browsers from guessing MIME types
# SECURE_CONTENT_TYPE_NOSNIFF = True

# # Prevent clickjacking by disallowing iframe embedding
# X_FRAME_OPTIONS = 'DENY'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'fruitkha.apps.FruitkhaConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'fruitkha.context_processors.countdown_timer',
                'fruitkha.context_processors.footer_context',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Redirect after successful login
LOGIN_REDIRECT_URL = '/'  # Redirect to homepage or cart page after login
LOGIN_URL = 'login'  # Redirect to login page if not logged in


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

# Static Files Configuration
STATIC_URL = "/static/"
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

# Enable Whitenoise for Static Files in Production
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# Media Files Configuration (if needed)
MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

# Default Primary Key Field Type
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# Email Configuration
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = "mdshahariyahossain03@gmail.com"
EMAIL_HOST_PASSWORD = "rucd lhax npzy phyd"  # App password

# SSLCommerz for Payment Gateway
SSLCOMMERZ_SETTINGS = {
    'store_id': 'examp66eead598747c',
    'store_pass': 'examp66eead598747c@ssl',
    'issandbox': True  # Change to False in production
}

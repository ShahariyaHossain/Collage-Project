# Generated by Django 5.1.3 on 2024-11-13 15:32

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='Name can only contain alphabetic characters and spaces.', regex='^[a-zA-Z]+(?:\\s[a-zA-Z]+)*$')])),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('phone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Enter a valid mobile number with optional country code.', regex='^\\+?\\d{1,4}?[\\d\\s]{7,20}$')])),
                ('password', models.CharField(max_length=100)),
                ('photos', models.ImageField(blank=True, default='profile_photos/default.gif', null=True, upload_to='profile_photos/')),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the product', max_length=100)),
                ('description', models.TextField(help_text='Short description of the product', max_length=500)),
                ('price', models.DecimalField(decimal_places=2, help_text='Price of the product (minimum $0.01).', max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('photos', models.ImageField(blank=True, default='product_photos/default-1.gif', help_text='Product image.', null=True, upload_to='product_photos/')),
                ('category', models.CharField(choices=[('fruits', 'Fruits'), ('vegetables', 'Vegetables'), ('organic', 'Organic'), ('dairy', 'Dairy'), ('snacks', 'Snacks')], help_text='Category of the product', max_length=50)),
                ('rating', models.FloatField(default=0.0, help_text='Rating of the product (0.0 to 5.0).', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
            ],
        ),
        migrations.CreateModel(
            name='Slider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Main heading for the slider', max_length=255)),
                ('subtitle', models.CharField(help_text='Subtitle for the slider', max_length=255)),
                ('background_image', models.ImageField(help_text='Background image for the slider', upload_to='slider_images/')),
                ('text_align', models.CharField(choices=[('text-left', 'Left Align'), ('text-center', 'Center Align'), ('text-right', 'Right Align')], default='text-left', help_text='Text alignment for the slider content', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('say_something', models.TextField(blank=True, help_text='Optional message about this cart item.', max_length=500)),
                ('accounts', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_items', to='fruitkha.account')),
                ('products', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_items', to='fruitkha.product')),
            ],
        ),
    ]
